version: '3.8'

services:
  frontend:
    depends_on:
      - fastapi
      - worker
      - qdrant
      - redis
    build:
      context: ./frontend/
      dockerfile: frontend.Dockerfile
    ports:
      - "3000:3000"
    command: npm run dev
    restart: always

  fastapi:
    build:
      context: .
      dockerfile: backend/worker.Dockerfile
    ports:
      - "8888:8111"
    command: python main.py
    restart: always

  worker:
    depends_on:
      - fastapi
      - redis
    build:
      context: .
      dockerfile: backend/worker.Dockerfile
    command: celery --app=celery_tasks.celery_app worker --loglevel=INFO
#    command: python celery_tasks.py
    restart: always

  flower:
    depends_on:
      - fastapi
      - redis
      - worker
    build:
      context: .
      dockerfile: backend/worker.Dockerfile
    ports:
      - "5555:5555"
    command: ['celery', '--app=celery_tasks.celery_app', 'flower', '--persistent=True']
    restart: always

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    restart: always

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    restart: always

#  rabbitmq:
#    image: rabbitmq
#    ports:
#      - "5672:5672"