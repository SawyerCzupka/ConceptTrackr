version: '3.8'

services:
  frontend:
    depends_on:
      - fastapi
      - worker
      - qdrant
      - redis
    build:
      context: ./frontend/
      dockerfile: frontend.Dockerfile
    ports:
      - "3000:3000"
    command: npm run dev
    restart: unless-stopped
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app/frontend
      - /app/node_modules

  fastapi:
    build:
      context: .
      dockerfile: backend/worker.Dockerfile
    ports:
      - "8888:8111"
    command: python main.py
    restart: unless-stopped
    volumes:
      - ./backend:/app/backend

  worker:
    depends_on:
      - fastapi
      - redis
    build:
      context: .
      dockerfile: backend/worker.Dockerfile
    command: celery --app=celery_tasks.celery_app worker --loglevel=INFO
    restart: unless-stopped

  flower:
    depends_on:
      - fastapi
      - redis
      - worker
    build:
      context: .
      dockerfile: backend/worker.Dockerfile
    ports:
      - "5555:5555"
    command: ['celery', '--app=celery_tasks.celery_app', 'flower', '--persistent=True']
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant/storage:/qdrant/storage
    restart: unless-stopped

